apiVersion: v1
kind: Secret
metadata:
  name: sec-{{ .Values.application }}-{{ .Values.environment }}
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  {{ if eq .Values.environment "dev" }}
  connection-string-default-conn: "{{ .Values.dev.connection_string_default_conn }}"
  telegram-chatid: "{{ .Values.dev.telegram_chatid }}"
  telegram-key: "{{ .Values.dev.telegram_key }}"
  {{ else if eq .Values.environment "test" }}
  connection-string-default-conn: "{{ .Values.test.message_broker_options_password }}"
  telegram-chatid: "{{ .Values.test.message_broker_options_username }}"
  telegram-key: "{{ .Values.test.vk_service_symbol_consumer_broker_password }}"
  {{ else if eq .Values.environment "preprod" }}
  connection-string-default-conn: "{{ .Values.preprod.message_broker_options_password }}"
  telegram-chatid: "{{ .Values.preprod.message_broker_options_username }}"
  telegram-key: "{{ .Values.preprod.vk_service_symbol_consumer_broker_password }}"
  {{ else if eq .Values.environment "prod" }}
  connection-string-default-conn: "{{ .Values.prod.message_broker_options_password }}"
  telegram-chatid: "{{ .Values.prod.message_broker_options_username }}"
  telegram-key: "{{ .Values.prod.vk_service_symbol_consumer_broker_password }}"
  {{ end }}

#data:
#  key1: value1 #base64encoded
#  key2: value2 #base64encoded